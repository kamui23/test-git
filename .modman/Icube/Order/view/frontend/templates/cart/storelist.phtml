<?php 
	$storelist = $this->getStoreList();
?>

<div class="list-storepickup">
<div class="title_shipping">
	<h4><?php echo $block->escapeHtml(__('SHIPPING METHOD')); ?></h4>
</div>
	<div class="shipping-options">
		<div class="shipping-option">
			<input type="radio" id="kirim" name="shipping-option" value="kirim">
			<img src="<?php echo $block->getViewFileUrl('Magento_Checkout::images/home.png') ?>" style="width: 32px;display: inline-block;vertical-align: middle;margin-right: 5px;">
			<label class="label" for="kirim"><?php echo $block->escapeHtml(__('DELIVERY TO HOME')); ?></label>
			<div class="info-shipping">
				<?php echo $block->escapeHtml(__('Products will be delivered to your address by courier delivery services.')); ?>
			</div>
		</div>
		<div class="shipping-option storepickup">
			<input type="radio" id="pickupinstore" name="shipping-option" value="pickupinstore">
			<img src="<?php echo $block->getViewFileUrl('Magento_Checkout::images/store.png') ?>" style="width: 32px;display: inline-block;vertical-align: middle;margin-right: 5px;">
			<label class="label" for="pickupinstore"><?php echo $block->escapeHtml(__('PICK UP IN STORE')); ?></label>
			<div class="info-shipping">
				<?php echo $block->escapeHtml(__('We will inform you when your product is ready.')); ?>
				<br><div style="margin-top: 5px; color: #ff0000;" id="nostockstore"> </div>
			</div>

			<div id="list_store">
			    <input type="text" class="fuzzy-search list_store" placeholder="<?php /* @escapeNotVerified */ echo __('Pilih Lokasi Store') ?>" disabled/>
				<div class="result">
					<?php /* @escapeNotVerified */ echo __('Result') ?>
				</div>
			    <div class="wrapper">
				    <ul class="list">
				    </ul>
			    </div>
		  	</div>

			<select class="select list_store" id="storepickup" disabled style="display:none;">
				<option value=""><?php echo $block->escapeHtml(__('Select a Store')); ?></option>
				<?php foreach ($storelist as $store) : ?>
					<option value="<?php echo $store['code']?>"><?php echo $store['name']?></option>
				<?php endforeach; ?>
			</select>
		</div> 
	</div>
</div>

<div class="overlay-bg-checkout" style="display: none">
	<div class="wrapper-overlay">
    	<img src="<?php echo $block->getViewFileUrl('Icube_Order::images/ajax-loader.gif') ?>" alt="overlay" />
    </div>
</div>

<div class="popup-store-wrapper">
	<div class="popup-store-notif">
		<span>
			Storepickup info
		</span>
		<button>OK</button>
	</div>
</div>

<script type="text/javascript">
    window.onload = function() {
    	require(
        [
            'jquery',
            'jquery/ui',
            'mage/url'
        ],
        function(
            $,
            ui,
            url
        ) {
            
			$.widget('mage.storelist', {
				_create: function() {
					var _self = this,
						hours = 3, // Reset when storage is more than 3hours
						now = new Date().getTime(),
						setupTime = localStorage.getItem('timeoutPickupstore');

					if (setupTime == null) {
					    localStorage.setItem('timeoutPickupstore', now);
					} else {
					    if(now-setupTime > hours*60*60*1000) {
					    	_self.destroyLocalStorage();
					    } else {
					    	var isDelivery = localStorage.getItem('isDelivery');
					    	var isStorepickup = localStorage.getItem('selected-store-pickup');
				        	if(isStorepickup) {
				        		$('#pickupinstore').trigger('click');
				        		$('#storepickup').val(isStorepickup).removeAttr('disabled');
				        		_self.ajaxStorePickup(isStorepickup);
				        	}
				        	if (isDelivery) {
				        		$('#kirim').trigger('click');
				        		_self.ajaxDelivery();
				        	}
					    }
					}

					var checkInterval;
			        checkInterval = setInterval(function () {

			            var loaderContainer = $(".shipping-options #kirim");
			            //Return if loader still load
			            if (loaderContainer.length == 0) {
			                return;
			            }
			        
			            //Remove loader and clear update interval if content loaded
			            if (loaderContainer.length > 0 ) {
			                clearInterval(checkInterval);
			                $('#kirim').prop('checked', true);
			        		_self.ajaxDelivery();
			            }

			        }, 100);
			        
					_self.chooseShipping(); 
				},

				chooseShipping: function() {
					var _self = this;
					$('input[name="shipping-option"]').click(function() {
						if($(this).is(":checked")) {
							var shippingIs = $(this).val();
							if (shippingIs == "pickupinstore") {
								/* remove isDelivery if exist */
				        		localStorage.removeItem('isDelivery');

								/* Enabling select storelist */
								$('#storepickup').removeAttr('disabled');	
								$('#list_store > input.list_store').removeAttr('disabled');	
								_self.listcreate();

									
								if ($('#list_store ul.list li').length == 0) {
									$('#list_store .wrapper .list').append('<div class="loader"></div>');
								};

								$("#list_store").focusin(function(){
									$('#list_store').addClass('show');
							    });
							    $("#list_store").focusout(function(){
							    	setTimeout(function(){
										$('#list_store').removeClass('show');
									}, 1000);
									$('#list_store .wrapper .loader').remove();
							    });
								_self.chooseStorePickup();
							} else {
								$('#storepickup').attr('disabled', true).val('');	
								$('#list_store > input.list_store').attr('disabled', true).val('');
								$('#list_store ul.list li').remove();
								$('#list_store ul.list .error_msg').remove();
								
								_self.ajaxDelivery();
							}
						}
					});
				},

				chooseStorePickup: function() {
					var _self = this;
					$('input[name="storepickup"]').change(function(){
						var selectedStorepickup = $(this).val();
						if (selectedStorepickup != "") {
							/* Set localStorage value*/
						    localStorage.setItem('selected-store-pickup', selectedStorepickup);

						    /* Ajax call to check stock */
						    _self.ajaxStorePickup(selectedStorepickup);
						}
						if($('input[name="storepickup"]').is(':checked')) { 
							$('#list_store .list li').removeClass('active');
							$(this).parent().addClass('active');
							var toko = $(this).siblings().children(".toko").text();
							var adderss = $(this).siblings().children(".adderss").text();
							var selected_value = toko + ', ' + adderss;
							$('.fuzzy-search.list_store').val(selected_value);
							var selectedStorepickup = $(this).val();
						}
					});
				},

				ajaxStorePickup: function(selectedStorepickup) {
					/* remove isDelivery if exist */
				    localStorage.removeItem('isDelivery');

					/* Start ajax call to check stock */
				    $('.overlay-bg-checkout').show();
				    $.ajax(
                    {
                        url: url.build("icubeorder/item/setmethod"),
                        type: "post",
                        dateType: "text",
                        data: {
                            place_id: selectedStorepickup,
                            method: "pickup"
                        },
                        success: function(result) {

                        	$('.icube-order-sku.show').each(function(){
                        		$(this).removeClass('show');
                        		$(this).find('.delivery-msg').remove();
                        	});

                        	if(result.type == 'mixed' || result.type == 'delivery'){

                        		var orderMessages = [];
                        		orderMessages = result.message;
                        		var popupNotif = $('.popup-store-notif span');
                        		
                        		$.each(orderMessages, function(index, value) {
                                    var theSku = $('.icube-order-sku span:contains('+index+')');
                                    theSku.closest('td').append('<div class="delivery-msg">'+value+'</div>');
                                    theSku.closest('tr').addClass('show');
                                }); 

                                popupNotif.text('Some of your item(s) are not available in the selected store and will be delivered instead');
                        		$('.popup-store-wrapper').fadeIn("slow");
                        		$('.popup-store-notif button').on("click", function(){
                        			$('.popup-store-wrapper').fadeOut("slow");
                        		});
                        		
                        	}

                        },
                        complete: function () {
                            $('.overlay-bg-checkout').hide();
                        }
                    });
                    /* End ajax call to check stock */
				},

				ajaxDelivery: function() {
					/* remove selected-store-pickup localStorage if exist */
					localStorage.removeItem('selected-store-pickup');
					$('.overlay-bg-checkout').show();
					$('input[name="storepickup"]').prop('checked', false);
				   	
					$.ajax(
                    {
                        url: url.build("icubeorder/item/setmethod"),
                        type: "post",
                        data: {
                            method: "delivery"
                        },
                        success: function(result) {
                        	
                        },
                        complete: function() {
                         	$('.overlay-bg-checkout').hide();
                        }
                    });	
				},

				destroyLocalStorage: function(now) {
					
				},

				listcreate: function() {
					var _self = this;

					$.ajax({
	                method: "GET",
	                url: '/icubeorder/ajax/storelistajax',
	                data: {page: 'cart'}
	            	}).done(function( list ) {
            		$('#list_store .wrapper .loader').remove();
            		if (list.ungroup.length <= 0) {
            			var empty_msg = '<?php echo $block->escapeHtml(__("Store list not available")); ?>';
            			$('#list_store .wrapper .list').append('<div class="error_msg">'+empty_msg+'</div>');
            		};
	                for (var i = 0; i < list.ungroup.length; i++) {
	                    var j = i+1;
	                    var toko = list.ungroup[i].name;
	                    // var name = list.ungroup[i].default_name;
	                    var state = list.ungroup[i].state;
	                    var address = list.ungroup[i].address_line_1;
	                    var address2 = list.ungroup[i].address_line_2;
	                    var phone = list.ungroup[i].main_phone;
	                    var hours = list.ungroup[i].description;
	                    var code = list.ungroup[i].store_code;
	                    var storeid = list.ungroup[i].place_id;

	                    if (address2 == null) {
	                        var address2 = '';
	                    }

	                    if (hours == null) {
	                        var hours = '';
	                    }

	                    if (phone == null) {
	                        var phone = '';
	                    }
	                        
	                    $('.shipping-options .shipping-option.storepickup #list_store ul').append('<li><input type="radio" id="store_pickup'+j+'" name="storepickup" value="'+storeid+'"><label class="name" for="store_pickup'+j+'"><span class="name toko">'+toko+'</span><span class="name adderss">'+address+'</span><span class="name adderss2">'+address2+'</span><span class="name phone">'+phone+'</span><span class="name hours">'+hours+'</span></label></li>');
	                	}

		                var monkeyList = new List('list_store', { 
		                    valueNames: ['name', 'adderss', 'adderss2']
		                });
		                _self.chooseStorePickup();
	            	});
				},
		});



			$(document).storelist();
        });
	}
</script>